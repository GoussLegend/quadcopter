/*
  Motors.cpp - Library for controlling a set of Quadcopter motors (aka motors)
  Created by Myles Grant <myles@mylesgrant.com>
  See also: https://github.com/grantmd/QuadCopter
  
  This program is free software: you can redistribute it and/or modify 
  it under the terms of the GNU General Public License as published by 
  the Free Software Foundation, either version 3 of the License, or 
  (at your option) any later version. 

  This program is distributed in the hope that it will be useful, 
  but WITHOUT ANY WARRANTY; without even the implied warranty of 
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
  GNU General Public License for more details. 

  You should have received a copy of the GNU General Public License 
  along with this program. If not, see <http://www.gnu.org/licenses/>. 
*/

#include "WProgram.h"
#include "Motors.h"




Motors::Motors(){  
  // Setup motors
  motors[0] = MOTOR_1_PIN;
  motors[1] = MOTOR_2_PIN;
  motors[2] = MOTOR_3_PIN;
  motors[3] = MOTOR_4_PIN;
}

void Motors::init(){
  //arm all motors
}

void Motors::allStop(){
  setAllSpeed(0);
}



void Motors::setMotorSpeed(byte motor, int speed){
  
  s
  speed = constrain(speed, MIN_MOTOR_SPEED, MAX_MOTOR_SPEED);
  
  analogWrite(motors[motor], speed);
  
  motor_speeds[motor] = speed;
}


int Engines::getMotorSpeed(byte engine){
  return motor_speeds[engine];
}

void Motors::setAllSpeed(int speed){
  for (byte motor = 0; motor < ENGINE_COUNT; motor++){
    setMotorSpeed(motor, speed);
  }
}





